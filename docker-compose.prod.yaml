version: "3.9"

services:
  db:
    image: postgres:15
    container_name: flowee-db
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    # No expongas 5432 si solo lo usa la app interna
    # ports:
    #   - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - appnet
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_NAME}"]
      interval: 5s
      timeout: 3s
      retries: 12

  floweeapp:
    build:
      context: .
      dockerfile: Dockerfile
    image: floweeapp-docker
    container_name: floweeapp
    restart: always
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    # No abras el puerto al host; Nginx har치 el proxy
    expose:
      - "${PORT}"
    networks:
      - appnet

  nginx:
    image: nginx:stable
    container_name: flowee-nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    # Si usas nginx.conf completo, est치 bien esta ruta.
    # Si usas un server en conf.d, cambia a conf.d/default.conf
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      # Si montas certificados de Let's Encrypt en el host, a침치delos:
      # - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - floweeapp
    networks:
      - appnet

volumes:
  pg_data:

networks:
  appnet: